#include <WiFi.h>
#include <WiFiClientSecure.h>

// Replace with your network credentials
const char* ssid = "Your WiFi network SSID";
const char* password = "Your WiFi network password";

// Replace with the chat ID of the recipient
const char* chatId = "Your chat ID";

// Replace with the Telegram bot token
const char* botToken = "Your bot token";

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  // Create a WiFiClientSecure object
  WiFiClientSecure client;

  // Connect to the Telegram API
  client.connect("api.telegram.org", 443);
  if (!client.connected()) {
    Serial.println("Could not connect to Telegram API");
    return;
  }
  Serial.println("Connected to Telegram API");

  // Send a photo
  String photoData = "data:image/jpeg;base64,";
  photoData += "Your photo data in base64 format";
  client.println("POST /bot" + botToken + "/sendPhoto HTTP/1.1");
  client.println("Host: api.telegram.org");
  client.println("Content-Type: multipart/form-data; boundary=TelegramPhoto");
  client.println("Content-Length: " + String(photoData.length()));
  client.println();
  client.println("--TelegramPhoto");
  client.println("Content-Disposition: form-data; name=\"chat_id\"; value=\"" + chatId + "\"");
  client.println();
  client.println();
  client.println("--TelegramPhoto");
  client.println("Content-Disposition: form-data; name=\"photo\"; filename=\"photo.jpg\"");
  client.println("Content-Type: image/jpeg");
  client.println("Content-Transfer-Encoding: base64");
  client.println();
  client.println(photoData);
  client.println("--TelegramPhoto--");
  client.println();

  // Check the response code
  int responseCode = client.read();
  if (responseCode == 200) {
    Serial.println("Photo sent successfully");
  } else {
    Serial.println("Error sending photo");
  }

  // Close the connection
  client.stop();
}

void loop() {
}